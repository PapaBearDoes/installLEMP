#!/bin/bash
################################################################################
##                               Setup                                        ##
################################################################################
email=example@example.com
domain=example.com

################################################################################
##                            Initial Setup                                   ##
################################################################################
clear
echo "Cleaning APT and updating to ensure we're current"
sudo apt clean
sudo apt update
sudo apt upgrade -y
sudo apt dist-upgrade -y
sudo apt auto-remove -y
sudo apt purge -y
sudo apt install wget curl
sleep 5

################################################################################
##                                 NGINX                                      ##
################################################################################
clear
echo "Let's install NGINX and get your firewall running!"
sudo apt install nginx -y
sudo apt install ufw -y
sudo ufw allow SSH
sudo ufw allow OpenSSH
sudo ufw allow 'Nginx Full'
echo 'Please answer "Yes" to the next question. This enables the firewall'
echo 'and allows SSH traffic through, and regular traffic to your NGINX server'
sleep 5
sudo ufw enable
echo 'Firewall installed and enabled allowing SSH and 80/443 traffic.'
sudo ufw status
echo 'Stopping Nginx service'
sudo systemctl stop nginx
sleep 5

################################################################################
##                                 MariaDB                                    ##
################################################################################
clear
echo "Installing MariaDB"
sudo apt install mariadb-server -y
echo "Starting MariaDB"
sudo systemctl start mariadb
echo "Setting to always run"
sudo systemctl enable mariadb
echo "Let's secure MariaDB."
echo "There is no password for root initially."
echo "Please add a password, and then answer yes to the rest of the questions to secure MariaDB"
sleep 5
sudo mysql_secure_installation
sleep 5

################################################################################
##                                   PHP                                      ##
################################################################################
clear
echo "Installing PHP"
sudo apt install php php-fpm php-curl php-cli php-zip php-mysql php-xml -y
php -v
sleep 5

################################################################################
##                                 WEBSITE                                    ##
################################################################################
clear
echo "Let's get that website running!"
sudo mkdir -pv /var/www/html/$domain

sudo cp -v ./index.php /var/www/html/$domain/index.php

sudo echo 'server {' > ./siteConf
sudo echo "  server_name $domain www.$domain;" >> ./siteConf
sudo echo '' >> ./siteConf
sudo echo "  root /var/www/html/$domain;" >> ./siteConf
sudo echo '  index index.htm index.php index.html index.nginx-debian.html;' >> ./siteConf
sudo echo '  access_log /var/log/nginx/example_access.log;' >> ./siteConf
sudo echo '  error_log /var/log/nginx/example_error.log;' >> ./siteConf
sudo echo '' >> ./siteConf
sudo echo '  location / {' >> ./siteConf
sudo echo '    try_files $uri $uri/ /index.php$is_args$args;' >> ./siteConf
sudo echo '  }' >> ./siteConf
sudo echo '' >> ./siteConf
sudo echo '  location ~ \.php$ {' >> ./siteConf
sudo echo '    try_files $uri = 404;' >> ./siteConf
sudo echo '    fastcgi_index index.php;' >> ./siteConf
sudo echo '    include fastcgi_params;' >> ./siteConf
sudo echo '    fastcgi_pass unix:/run/php/php7.4-fpm.sock;' >> ./siteConf
sudo echo '    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;' >> ./siteConf
sudo echo '  }' >> ./siteConf
sudo echo '}' >> ./siteConf
sudo mv -v ./siteConf /etc/nginx/sites-available/$domain

sudo ln -sv /etc/nginx/sites-available/$domain /etc/nginx/sites-enabled/$domain
sudo rm -v /etc/nginx/sites-enabled/default
sudo systemctl restart nginx

echo "You should be able to see your site now."
sleep 5

################################################################################
##                                 CERTBOT                                    ##
################################################################################
clear
echo "Installing CertBot"
sudo apt install snapd -y
sudo snap install core
sudo snap refresh core
sudo apt purge certbot -y
sudo snap install --classic certbot
sudo ln -s /snap/bin/certbot /usr/bin/certbot
echo "CertBot installed."
echo "sudo certbot --nginx --agree-tos --redirect --email $email -d $domain -d www.$domain"